pipeline {
    agent any

    stages {
        stage('preparation') {
            steps {
                // Get some code from a GitHub repository
                git 'https://github.com/IslamReda/jenkins_nodejs_example.git'
            }
        }
        post {
        success {
            slackSend (
                channel: "yat",
                color: "good",
                tokenCredentialId: "slack",
                message: "Build ${env.BUILD_NUMBER} was successfull! ${env.BUILD_URL}  -  ${BUILD_URL}"
            )
        }
        stage('buildPush') {
            steps {
                withCredentials([usernamePassword(credentialsId:"docker",usernameVariable:"username",passwordVariable:"pass")]){
                sh 'docker build . -t ${username}/jenkins_sprints_example:v1.0'
                sh 'docker login -u ${username} -p ${pass}'
                sh 'docker push ${username}/jenkins_sprints_example:v1.0'
                }
            }

        }
        stage('deploy') {
            steps {
                sh 'docker run -d -p 3000:3000 islamreda/jenkins_sprints_example:v1.0'
            }
        }
    }
    post {
        success {
            slackSend (
                channel: "yat",
                color: "good",
                tokenCredentialId: "slack",
                message: "Build ${env.BUILD_NUMBER} was successfull! ${env.BUILD_URL}  -  ${BUILD_URL}"
            )
        }
        always {
            slackSend (
                channel: "yat",
                color: "good",
                tokenCredentialId: "slack",
                message: "Build ${env.BUILD_NUMBER} was failed! ${env.BUILD_URL} ${env.BUILD_STATUS}"
            )
        }
    }
}
